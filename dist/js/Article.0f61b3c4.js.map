{"version":3,"sources":["webpack:///./src/views/Article/Article.vue","webpack:///./node_modules/vue-prism-editor/dist/prismeditor.esm.js","webpack:///./src/views/Article/Article.vue?c794","webpack:///./node_modules/prismjs/components/prism-javascript.js","webpack:///./node_modules/prismjs/components/prism-core.js","webpack:///./node_modules/prismjs/components/prism-clike.js","webpack:///./src/views/Article/Article.vue?8d0e"],"names":["class","_createElementBlock","_createElementVNode","_toDisplayString","$setup","key","_Fragment","_renderList","item","title","text","items","index","name","content","code","_createBlock","_component_prism_editor","$event","highlight","readonly","line-numbers","_createVNode","_component_router_link","to","backUrl","back","nextUrl","next","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","KEYCODE_ENTER","KEYCODE_TAB","KEYCODE_BACKSPACE","KEYCODE_Y","KEYCODE_Z","KEYCODE_M","KEYCODE_PARENS","KEYCODE_BRACKETS","KEYCODE_QUOTE","KEYCODE_BACK_QUOTE","KEYCODE_ESCAPE","HISTORY_LIMIT","HISTORY_TIME_GAP","isWindows","window","navigator","test","platform","isMacLike","PrismEditor","props","lineNumbers","type","Boolean","autoStyleLineNumbers","modelValue","String","Function","required","tabSize","Number","insertSpaces","ignoreTabKey","placeholder","data","capture","history","stack","offset","lineNumbersHeight","codeData","watch","immediate","handler","newVal","_this","$nextTick","setLineNumbersHeight","_this2","styleLineNumbers","computed","isEmpty","result","lineNumbersCount","totalLines","split","mounted","_recordCurrentState","methods","getComputedStyle","$refs","pre","height","$editor","$lineNumbers","$el","querySelector","editorStyles","btlr","bblr","style","stylesList","forEach","input","textarea","value","selectionStart","selectionEnd","_recordChange","_getLines","position","substring","_applyEdits","record","last","_updateInput","overwrite","_this$history","slice","count","extras","Math","max","timestamp","Date","now","_this$_getLines$pop","_this$_getLines$pop2","re","previous","pop","match","current","startsWith","push","$emit","handleChange","e","_e$target","_undoEdit","_this$history2","_redoEdit","_this$history3","min","handleKeyDown","defaultPrevented","keyCode","blur","_e$target2","tabCharacter","repeat","preventDefault","shiftKey","linesBeforeCaret","startLine","endLine","nextValue","map","line","join","startLineText","_linesBeforeCaret","_startLine","_endLine","_startLineText","updatedSelection","hasSelection","textBeforeCaret","endsWith","_updatedSelection","matches","indent","_updatedSelection2","chars","metaKey","ctrlKey","altKey","render","_this3","lineNumberWidthCalculator","Array","from","keys","_","ref","onInput","onKeydown","onClick","onKeyup","onFocus","onBlur","spellCheck","autocapitalize","autocomplete","autocorrect","preview","innerHTML","editorContainer","components","setup","route","useRoute","list","nearbyList","url","params","id","path","console","log","get","meta","highlighter","languages","js","__exports__","Prism","javascript","extend","clike","pattern","lookbehind","RegExp","insertBefore","greedy","inside","alias","regex","rest","markup","tag","addInlined","addAttribute","_self","WorkerGlobalScope","self","lang","uniqueId","plainTextGrammar","manual","disableWorkerMessageHandler","util","encode","tokens","Token","isArray","replace","o","toString","objId","obj","defineProperty","clone","deepClone","visited","v","getLanguage","element","m","exec","className","toLowerCase","parentElement","setLanguage","language","classList","add","currentScript","document","Error","err","src","scripts","getElementsByTagName","isActive","defaultActivation","no","contains","plain","plaintext","txt","redef","before","insert","root","grammar","ret","token","newToken","old","DFS","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","querySelectorAll","highlightElement","parent","nodeName","textContent","insertHighlightedCode","highlightedCode","hasAttribute","setAttribute","Worker","worker","filename","onmessage","evt","postMessage","JSON","stringify","immediateClose","tokenize","tokenList","LinkedList","addAfter","head","matchGrammar","toArray","all","callbacks","matchedStr","matchPattern","pos","lastIndex","lookbehindLength","startNode","startPos","rematch","patterns","j","cause","patternObj","global","flags","currentNode","tail","reach","str","removeCount","p","k","matchStr","after","removeFrom","prev","removeRange","wrapped","nestedRematch","node","newNode","array","s","classes","attributes","aliases","addEventListener","message","parse","close","script","highlightAutomaticallyCallback","readyState","defer","requestAnimationFrame","setTimeout","module","exports"],"mappings":"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","file":"js/Article.0f61b3c4.js","sourcesContent":["<template>\r\n    <div class=\"content\">\r\n        <span class=\"content__header\">\r\n            {{ key.key }}\r\n        </span>\r\n        <div v-for=\"item in list\" :key=\"item.title\">\r\n            <div class=\"content__title\">{{ item.title }}</div>\r\n            <div class=\"content__text\" v-for=\"(items, index ) in item.text\" :key=\"index\">\r\n                <div class=\"content__text__name\">{{ items.name }}</div>\r\n                <div class=\"content__text__content\">&emsp;&emsp;{{ items.content }}</div>\r\n                <prism-editor class=\"content__text__editor\" v-model=\"items.code\" :highlight=\"highlighter\"\r\n                    :readonly=\"true\" line-numbers v-if=\"items.code\">\r\n                </prism-editor>\r\n            </div>\r\n        </div>\r\n        <div class=\"content__jump\">\r\n            <router-link :to=\"'/'+ key.backUrl\" class=\"content__jump__back\">\r\n                {{ key.back }}\r\n            </router-link>\r\n            <router-link :to=\"'/'+ key.nextUrl\" class=\"content__jump__next\">\r\n                {{ key.next }}\r\n            </router-link>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { PrismEditor } from 'vue-prism-editor'\r\nimport 'vue-prism-editor/dist/prismeditor.min.css'\r\nimport { highlight, languages } from 'prismjs/components/prism-core'\r\nimport 'prismjs/components/prism-clike'\r\nimport 'prismjs/components/prism-javascript'\r\nimport 'prismjs/themes/prism-tomorrow.css'\r\nimport { ref } from '@vue/reactivity'\r\nimport { get } from '../../assets/requr'\r\nimport { useRoute } from 'vue-router'\r\nexport default {\r\n    name: 'Article',\r\n    components: {\r\n        PrismEditor,\r\n    },\r\n    setup() {\r\n        const route = useRoute()\r\n        const list = ref([])\r\n        const key = ref([])\r\n        const nearbyList = async () => {\r\n            let url = route.params.id\r\n            if (!url) {\r\n                url = route.path + '/' + 'home'\r\n            } else {\r\n                url = route.path\r\n            }\r\n            console.log(url)\r\n            const result = await get(url)\r\n            if (result?.data) {\r\n                if (result?.data){\r\n                    list.value = result.data\r\n                key.value = result.meta\r\n                }\r\n            }\r\n        }\r\n        nearbyList()\r\n        const highlighter = (code) => {\r\n            return highlight(code, languages.js);\r\n        }\r\n        return { list, key, highlighter }\r\n    }\r\n}\r\n</script>\r\n\r\n<style  lang = \"scss\" scoped>\r\n@import '@/assets/css/index.scss';\r\n\r\n.content {\r\n    position: absolute;\r\n    margin: .1rem 1rem;\r\n    float: right;\r\n    left: 3rem;\r\n    right: .3rem;\r\n    min-height: 2rem;\r\n    overflow: hidden;\r\n\r\n    &__header {\r\n        display: block;\r\n        font-size: .4rem;\r\n        text-align: center;\r\n    }\r\n\r\n    &__title {\r\n        display: block;\r\n        margin: .2rem 0;\r\n        font-size: .21rem;\r\n        font-weight: 700;\r\n    }\r\n\r\n    &__text {\r\n        display: block;\r\n        margin: .1rem 0;\r\n\r\n        &__name {\r\n            display: block;\r\n            margin: .05rem 0;\r\n            font-size: .17rem;\r\n        }\r\n\r\n        &__content {\r\n            display: block;\r\n            margin: .05rem 0;\r\n            line-height: .3rem;\r\n            font-size: .16rem;\r\n        }\r\n\r\n        &__editor {\r\n            background: #2d2d2d;\r\n            color: #ccc;\r\n            font-family: Fira code, Fira Mono, Consolas, Menlo, Courier, monospace;\r\n            font-size: .14rem;\r\n            line-height: 1.5;\r\n            padding: 5px;\r\n        }\r\n    }\r\n\r\n    &__jump {\r\n        display: block;\r\n        line-height: 0.5rem;\r\n        border-top: 1px $border-gray solid;\r\n        width: 100%;\r\n        margin: .5rem 0 1rem 0;\r\n        font-size: .16rem;\r\n\r\n        a {\r\n            color: $element-blue;\r\n            text-decoration: none;\r\n        }\r\n\r\n        &__back {\r\n            left: 0;\r\n            position: absolute;\r\n        }\r\n\r\n        &__next {\r\n            right: 0;\r\n            position: absolute;\r\n        }\r\n    }\r\n}\r\n</style>\r\n","import { defineComponent, h } from 'vue';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar KEYCODE_ENTER = 13;\nvar KEYCODE_TAB = 9;\nvar KEYCODE_BACKSPACE = 8;\nvar KEYCODE_Y = 89;\nvar KEYCODE_Z = 90;\nvar KEYCODE_M = 77;\nvar KEYCODE_PARENS = 57;\nvar KEYCODE_BRACKETS = 219;\nvar KEYCODE_QUOTE = 222;\nvar KEYCODE_BACK_QUOTE = 192;\nvar KEYCODE_ESCAPE = 27;\nvar HISTORY_LIMIT = 100;\nvar HISTORY_TIME_GAP = 3000;\nvar isWindows = typeof window !== 'undefined' && navigator && /*#__PURE__*/ /Win/i.test(navigator.platform);\nvar isMacLike = typeof window !== 'undefined' && navigator && /*#__PURE__*/ /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\nvar PrismEditor = /*#__PURE__*/defineComponent({\n  props: {\n    lineNumbers: {\n      type: Boolean,\n      \"default\": false\n    },\n    autoStyleLineNumbers: {\n      type: Boolean,\n      \"default\": true\n    },\n    readonly: {\n      type: Boolean,\n      \"default\": false\n    },\n    modelValue: {\n      type: String,\n      \"default\": ''\n    },\n    highlight: {\n      type: Function,\n      required: true\n    },\n    tabSize: {\n      type: Number,\n      \"default\": 2\n    },\n    insertSpaces: {\n      type: Boolean,\n      \"default\": true\n    },\n    ignoreTabKey: {\n      type: Boolean,\n      \"default\": false\n    },\n    placeholder: {\n      type: String,\n      \"default\": ''\n    }\n  },\n  data: function data() {\n    return {\n      capture: true,\n      history: {\n        stack: [],\n        offset: -1\n      },\n      lineNumbersHeight: '20px',\n      codeData: ''\n    };\n  },\n  watch: {\n    modelValue: {\n      immediate: true,\n      handler: function handler(newVal) {\n        if (!newVal) {\n          this.codeData = '';\n        } else {\n          this.codeData = newVal;\n        }\n      }\n    },\n    content: {\n      immediate: true,\n      handler: function handler() {\n        var _this = this;\n\n        if (this.lineNumbers) {\n          this.$nextTick(function () {\n            _this.setLineNumbersHeight();\n          });\n        }\n      }\n    },\n    lineNumbers: function lineNumbers() {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        _this2.styleLineNumbers();\n\n        _this2.setLineNumbersHeight();\n      });\n    }\n  },\n  computed: {\n    isEmpty: function isEmpty() {\n      return this.codeData.length === 0;\n    },\n    content: function content() {\n      var result = this.highlight(this.codeData) + '<br />'; // todo: VNode support?\n\n      return result;\n    },\n    lineNumbersCount: function lineNumbersCount() {\n      var totalLines = this.codeData.split(/\\r\\n|\\n/).length;\n      return totalLines;\n    }\n  },\n  mounted: function mounted() {\n    this._recordCurrentState();\n\n    this.styleLineNumbers();\n  },\n  methods: {\n    setLineNumbersHeight: function setLineNumbersHeight() {\n      this.lineNumbersHeight = getComputedStyle(this.$refs.pre).height;\n    },\n    styleLineNumbers: function styleLineNumbers() {\n      if (!this.lineNumbers || !this.autoStyleLineNumbers) return;\n      var $editor = this.$refs.pre;\n      var $lineNumbers = this.$el.querySelector('.prism-editor__line-numbers');\n      var editorStyles = window.getComputedStyle($editor);\n      this.$nextTick(function () {\n        var btlr = 'border-top-left-radius';\n        var bblr = 'border-bottom-left-radius';\n        if (!$lineNumbers) return;\n        $lineNumbers.style[btlr] = editorStyles[btlr];\n        $lineNumbers.style[bblr] = editorStyles[bblr];\n        $editor.style[btlr] = '0';\n        $editor.style[bblr] = '0';\n        var stylesList = ['background-color', 'margin-top', 'padding-top', 'font-family', 'font-size', 'line-height'];\n        stylesList.forEach(function (style) {\n          $lineNumbers.style[style] = editorStyles[style];\n        });\n        $lineNumbers.style['margin-bottom'] = '-' + editorStyles['padding-top'];\n      });\n    },\n    _recordCurrentState: function _recordCurrentState() {\n      var input = this.$refs.textarea;\n      if (!input) return; // Save current state of the input\n\n      var value = input.value,\n          selectionStart = input.selectionStart,\n          selectionEnd = input.selectionEnd;\n\n      this._recordChange({\n        value: value,\n        selectionStart: selectionStart,\n        selectionEnd: selectionEnd\n      });\n    },\n    _getLines: function _getLines(text, position) {\n      return text.substring(0, position).split('\\n');\n    },\n    _applyEdits: function _applyEdits(record) {\n      // Save last selection state\n      var input = this.$refs.textarea;\n      var last = this.history.stack[this.history.offset];\n\n      if (last && input) {\n        this.history.stack[this.history.offset] = _extends({}, last, {\n          selectionStart: input.selectionStart,\n          selectionEnd: input.selectionEnd\n        });\n      } // Save the changes\n\n\n      this._recordChange(record);\n\n      this._updateInput(record);\n    },\n    _recordChange: function _recordChange(record, overwrite) {\n      if (overwrite === void 0) {\n        overwrite = false;\n      }\n\n      var _this$history = this.history,\n          stack = _this$history.stack,\n          offset = _this$history.offset;\n\n      if (stack.length && offset > -1) {\n        // When something updates, drop the redo operations\n        this.history.stack = stack.slice(0, offset + 1); // Limit the number of operations to 100\n\n        var count = this.history.stack.length;\n\n        if (count > HISTORY_LIMIT) {\n          var extras = count - HISTORY_LIMIT;\n          this.history.stack = stack.slice(extras, count);\n          this.history.offset = Math.max(this.history.offset - extras, 0);\n        }\n      }\n\n      var timestamp = Date.now();\n\n      if (overwrite) {\n        var last = this.history.stack[this.history.offset];\n\n        if (last && timestamp - last.timestamp < HISTORY_TIME_GAP) {\n          var _this$_getLines$pop, _this$_getLines$pop2;\n\n          // A previous entry exists and was in short interval\n          // Match the last word in the line\n          var re = /[^a-z0-9]([a-z0-9]+)$/i; // Get the previous line\n\n          var previous = (_this$_getLines$pop = this._getLines(last.value, last.selectionStart).pop()) === null || _this$_getLines$pop === void 0 ? void 0 : _this$_getLines$pop.match(re); // Get the current line\n\n          var current = (_this$_getLines$pop2 = this._getLines(record.value, record.selectionStart).pop()) === null || _this$_getLines$pop2 === void 0 ? void 0 : _this$_getLines$pop2.match(re);\n\n          if (previous && current && current[1].startsWith(previous[1])) {\n            // The last word of the previous line and current line match\n            // Overwrite previous entry so that undo will remove whole word\n            this.history.stack[this.history.offset] = _extends({}, record, {\n              timestamp: timestamp\n            });\n            return;\n          }\n        }\n      } // Add the new operation to the stack\n\n\n      this.history.stack.push(_extends({}, record, {\n        timestamp: timestamp\n      }));\n      this.history.offset++;\n    },\n    _updateInput: function _updateInput(record) {\n      var input = this.$refs.textarea;\n      if (!input) return; // Update values and selection state\n\n      input.value = record.value;\n      input.selectionStart = record.selectionStart;\n      input.selectionEnd = record.selectionEnd;\n      this.$emit('update:modelValue', record.value); // this.props.onValueChange(record.value);\n    },\n    handleChange: function handleChange(e) {\n      var _e$target = e.target,\n          value = _e$target.value,\n          selectionStart = _e$target.selectionStart,\n          selectionEnd = _e$target.selectionEnd;\n\n      this._recordChange({\n        value: value,\n        selectionStart: selectionStart,\n        selectionEnd: selectionEnd\n      }, true);\n\n      this.$emit('update:modelValue', value); // this.props.onValueChange(value);\n    },\n    _undoEdit: function _undoEdit() {\n      var _this$history2 = this.history,\n          stack = _this$history2.stack,\n          offset = _this$history2.offset; // Get the previous edit\n\n      var record = stack[offset - 1];\n\n      if (record) {\n        // Apply the changes and update the offset\n        this._updateInput(record);\n\n        this.history.offset = Math.max(offset - 1, 0);\n      }\n    },\n    _redoEdit: function _redoEdit() {\n      var _this$history3 = this.history,\n          stack = _this$history3.stack,\n          offset = _this$history3.offset; // Get the next edit\n\n      var record = stack[offset + 1];\n\n      if (record) {\n        // Apply the changes and update the offset\n        this._updateInput(record);\n\n        this.history.offset = Math.min(offset + 1, stack.length - 1);\n      }\n    },\n    handleKeyDown: function handleKeyDown(e) {\n      // console.log(navigator.platform);\n      var tabSize = this.tabSize,\n          insertSpaces = this.insertSpaces,\n          ignoreTabKey = this.ignoreTabKey; // onKeyDown(e);\n\n      this.$emit('keydown', e);\n\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      if (e.keyCode === KEYCODE_ESCAPE) {\n        e.target.blur();\n        this.$emit('blur', e);\n      }\n\n      var _e$target2 = e.target,\n          value = _e$target2.value,\n          selectionStart = _e$target2.selectionStart,\n          selectionEnd = _e$target2.selectionEnd;\n      var tabCharacter = (insertSpaces ? ' ' : '\\t').repeat(tabSize);\n\n      if (e.keyCode === KEYCODE_TAB && !ignoreTabKey && this.capture) {\n        // Prevent focus change\n        e.preventDefault();\n\n        if (e.shiftKey) {\n          // Unindent selected lines\n          var linesBeforeCaret = this._getLines(value, selectionStart);\n\n          var startLine = linesBeforeCaret.length - 1;\n          var endLine = this._getLines(value, selectionEnd).length - 1;\n          var nextValue = value.split('\\n').map(function (line, i) {\n            if (i >= startLine && i <= endLine && line.startsWith(tabCharacter)) {\n              return line.substring(tabCharacter.length);\n            }\n\n            return line;\n          }).join('\\n');\n\n          if (value !== nextValue) {\n            var startLineText = linesBeforeCaret[startLine];\n\n            this._applyEdits({\n              value: nextValue,\n              // Move the start cursor if first line in selection was modified\n              // It was modified only if it started with a tab\n              selectionStart: startLineText.startsWith(tabCharacter) ? selectionStart - tabCharacter.length : selectionStart,\n              // Move the end cursor by total number of characters removed\n              selectionEnd: selectionEnd - (value.length - nextValue.length)\n            });\n          }\n        } else if (selectionStart !== selectionEnd) {\n          // Indent selected lines\n          var _linesBeforeCaret = this._getLines(value, selectionStart);\n\n          var _startLine = _linesBeforeCaret.length - 1;\n\n          var _endLine = this._getLines(value, selectionEnd).length - 1;\n\n          var _startLineText = _linesBeforeCaret[_startLine];\n\n          this._applyEdits({\n            value: value.split('\\n').map(function (line, i) {\n              if (i >= _startLine && i <= _endLine) {\n                return tabCharacter + line;\n              }\n\n              return line;\n            }).join('\\n'),\n            // Move the start cursor by number of characters added in first line of selection\n            // Don't move it if it there was no text before cursor\n            selectionStart: /\\S/.test(_startLineText) ? selectionStart + tabCharacter.length : selectionStart,\n            // Move the end cursor by total number of characters added\n            selectionEnd: selectionEnd + tabCharacter.length * (_endLine - _startLine + 1)\n          });\n        } else {\n          var updatedSelection = selectionStart + tabCharacter.length;\n\n          this._applyEdits({\n            // Insert tab character at caret\n            value: value.substring(0, selectionStart) + tabCharacter + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: updatedSelection,\n            selectionEnd: updatedSelection\n          });\n        }\n      } else if (e.keyCode === KEYCODE_BACKSPACE) {\n        var hasSelection = selectionStart !== selectionEnd;\n        var textBeforeCaret = value.substring(0, selectionStart);\n\n        if (textBeforeCaret.endsWith(tabCharacter) && !hasSelection) {\n          // Prevent default delete behaviour\n          e.preventDefault();\n\n          var _updatedSelection = selectionStart - tabCharacter.length;\n\n          this._applyEdits({\n            // Remove tab character at caret\n            value: value.substring(0, selectionStart - tabCharacter.length) + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: _updatedSelection,\n            selectionEnd: _updatedSelection\n          });\n        }\n      } else if (e.keyCode === KEYCODE_ENTER) {\n        // Ignore selections\n        if (selectionStart === selectionEnd) {\n          // Get the current line\n          var line = this._getLines(value, selectionStart).pop();\n\n          var matches = line === null || line === void 0 ? void 0 : line.match(/^\\s+/);\n\n          if (matches && matches[0]) {\n            e.preventDefault(); // Preserve indentation on inserting a new line\n\n            var indent = '\\n' + matches[0];\n\n            var _updatedSelection2 = selectionStart + indent.length;\n\n            this._applyEdits({\n              // Insert indentation character at caret\n              value: value.substring(0, selectionStart) + indent + value.substring(selectionEnd),\n              // Update caret position\n              selectionStart: _updatedSelection2,\n              selectionEnd: _updatedSelection2\n            });\n          }\n        }\n      } else if (e.keyCode === KEYCODE_PARENS || e.keyCode === KEYCODE_BRACKETS || e.keyCode === KEYCODE_QUOTE || e.keyCode === KEYCODE_BACK_QUOTE) {\n        var chars;\n\n        if (e.keyCode === KEYCODE_PARENS && e.shiftKey) {\n          chars = ['(', ')'];\n        } else if (e.keyCode === KEYCODE_BRACKETS) {\n          if (e.shiftKey) {\n            chars = ['{', '}'];\n          } else {\n            chars = ['[', ']'];\n          }\n        } else if (e.keyCode === KEYCODE_QUOTE) {\n          if (e.shiftKey) {\n            chars = ['\"', '\"'];\n          } else {\n            chars = [\"'\", \"'\"];\n          }\n        } else if (e.keyCode === KEYCODE_BACK_QUOTE && !e.shiftKey) {\n          chars = ['`', '`'];\n        } // console.log(isMacLike, \"navigator\" in global && /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform));\n        // If text is selected, wrap them in the characters\n\n\n        if (selectionStart !== selectionEnd && chars) {\n          e.preventDefault();\n\n          this._applyEdits({\n            value: value.substring(0, selectionStart) + chars[0] + value.substring(selectionStart, selectionEnd) + chars[1] + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: selectionStart,\n            selectionEnd: selectionEnd + 2\n          });\n        }\n      } else if ((isMacLike ? // Trigger undo with ⌘+Z on Mac\n      e.metaKey && e.keyCode === KEYCODE_Z : // Trigger undo with Ctrl+Z on other platforms\n      e.ctrlKey && e.keyCode === KEYCODE_Z) && !e.shiftKey && !e.altKey) {\n        e.preventDefault();\n\n        this._undoEdit();\n      } else if ((isMacLike ? // Trigger redo with ⌘+Shift+Z on Mac\n      e.metaKey && e.keyCode === KEYCODE_Z && e.shiftKey : isWindows ? // Trigger redo with Ctrl+Y on Windows\n      e.ctrlKey && e.keyCode === KEYCODE_Y : // Trigger redo with Ctrl+Shift+Z on other platforms\n      e.ctrlKey && e.keyCode === KEYCODE_Z && e.shiftKey) && !e.altKey) {\n        e.preventDefault();\n\n        this._redoEdit();\n      } else if (e.keyCode === KEYCODE_M && e.ctrlKey && (isMacLike ? e.shiftKey : true)) {\n        e.preventDefault(); // Toggle capturing tab key so users can focus away\n\n        this.capture = !this.capture;\n      }\n    }\n  },\n  render: function render() {\n    var _this3 = this;\n\n    var lineNumberWidthCalculator = h('div', {\n      \"class\": 'prism-editor__line-width-calc',\n      style: 'height: 0px; visibility: hidden; pointer-events: none;'\n    }, '999');\n    var lineNumbers = h('div', {\n      \"class\": 'prism-editor__line-numbers',\n      style: {\n        'min-height': this.lineNumbersHeight\n      },\n      'aria-hidden': 'true'\n    }, [lineNumberWidthCalculator, Array.from(Array(this.lineNumbersCount).keys()).map(function (_, index) {\n      return h('div', {\n        \"class\": 'prism-editor__line-number token comment'\n      }, \"\" + ++index);\n    })]);\n    var textarea = h('textarea', {\n      ref: 'textarea',\n      onInput: this.handleChange,\n      onKeydown: this.handleKeyDown,\n      onClick: function onClick($event) {\n        _this3.$emit('click', $event);\n      },\n      onKeyup: function onKeyup($event) {\n        _this3.$emit('keyup', $event);\n      },\n      onFocus: function onFocus($event) {\n        _this3.$emit('focus', $event);\n      },\n      onBlur: function onBlur($event) {\n        _this3.$emit('blur', $event);\n      },\n      \"class\": {\n        'prism-editor__textarea': true,\n        'prism-editor__textarea--empty': this.isEmpty\n      },\n      spellCheck: 'false',\n      autocapitalize: 'off',\n      autocomplete: 'off',\n      autocorrect: 'off',\n      'data-gramm': 'false',\n      placeholder: this.placeholder,\n      'data-testid': 'textarea',\n      readonly: this.readonly,\n      value: this.codeData\n    });\n    var preview = h('pre', {\n      ref: 'pre',\n      \"class\": 'prism-editor__editor',\n      'data-testid': 'preview',\n      innerHTML: this.content\n    });\n    var editorContainer = h('div', {\n      \"class\": 'prism-editor__container'\n    }, [textarea, preview]);\n    return h('div', {\n      \"class\": 'prism-editor-wrapper'\n    }, [this.lineNumbers && lineNumbers, editorContainer]);\n  }\n});\n\nexport { PrismEditor };\n//# sourceMappingURL=prismeditor.esm.js.map\n","import { render } from \"./Article.vue?vue&type=template&id=6e286aff&scoped=true\"\nimport script from \"./Article.vue?vue&type=script&lang=js\"\nexport * from \"./Article.vue?vue&type=script&lang=js\"\n\nimport \"./Article.vue?vue&type=style&index=0&id=6e286aff&lang=scss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\小宋\\\\Desktop\\\\blog\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6e286aff\"]])\n\nexport default __exports__","Prism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n","/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n","Prism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Article.vue?vue&type=style&index=0&id=6e286aff&lang=scss&scoped=true\""],"sourceRoot":""}